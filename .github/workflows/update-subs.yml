name: Hourly subreddit subscriber logger

on:
  schedule:
    - cron: '0 * * * *'   # every hour at minute 0 (UTC)
  workflow_dispatch: {}   # manual trigger

jobs:
  update-subs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Fetch subreddit subscriber count
        id: fetch
        run: |
          SUB="indianrailways"
          echo "Fetching https://www.reddit.com/r/${SUB}/about.json"
          COUNT=$(curl -s -A "github-actions" "https://www.reddit.com/r/${SUB}/about.json" | jq '.data.subscribers')
          if [ -z "$COUNT" ]; then
            echo "count=0" >> $GITHUB_OUTPUT
          else
            echo "count=$COUNT" >> $GITHUB_OUTPUT
          fi

      - name: Ensure data.json exists
        run: |
          if [ ! -f data.json ]; then
            echo '{"logs": []}' > data.json
          fi

      - name: Append new entry to data.json (milliseconds)
        run: |
          NOW_MS=$(($(date +%s) * 1000))
          COUNT=${{ steps.fetch.outputs.count }}
          echo "Now (ms): $NOW_MS  Count: $COUNT"
          LAST_TIME=$(jq -r '.logs | last?.time // 0' data.json)
          if [ "$LAST_TIME" -lt "$NOW_MS" ]; then
            jq --arg time "$NOW_MS" --argjson count "$COUNT" '.logs += [{"time": ($time|tonumber), "count": $count}]' data.json > data.tmp && mv data.tmp data.json
          else
            echo "Latest log already up-to-date. Skipping append."
          fi
          # Trim to last 10000 entries
          jq '.logs |= (sort_by(.time) | unique_by(.time) | reverse | .[0:10000] | reverse)' data.json > data.tmp && mv data.tmp data.json

      - name: Commit & push data.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add data.json
          git commit -m "Update subscriber log: $(date -u +"%Y-%m-%d %H:%M:%S UTC")" || echo "No changes to commit"
          git push
